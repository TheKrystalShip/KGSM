# Configuration file for KGSM (Krystal Game Server Manager)
#
# This file is used whenever interacting with kgsm or its modules.
# All values in this file can also be set as environment variables.
# If a variable is uncommented here, it will override the corresponding
# environment variable.

# KGSM Branch
# Description: Specifies which development branch to use when checking for
# updates.
# - 'main' provides the most stable version.
# - 'dev' offers the latest updates but may include experimental changes.
# Values:
#   main
#   dev
# Default: main
KGSM_BRANCH=main

# Check for Updates on Script Call
# Requires: wget
# Description: Automatically checks for new KGSM versions whenever kgsm.sh is
# executed.
# Values:
#   0 - Disabled
#   1 - Enabled
# Default: 0
KGSM_RUN_UPDATE_CHECK=0

# Logging
# Description: Enables or disables logging for KGSM and its modules.
# When enabled, logs are stored in the $KGSM_ROOT/logs directory.
# Values:
#   0 - Disabled
#   1 - Enabled
# Default: 0
USE_LOGGING=0

# Maximum Log File Size
# Description: Specifies the maximum size (in kilobytes) of log files before
# they are rotated.
# Default: 104858 (1 MB)
LOG_FILE_MAX_SIZE=104858

# SteamCMD Login Credentials
# Description: Used for logging into SteamCMD to download game servers requiring
# authentication.
# Security Note: For better security, set these as environment variables and
# comment them out here.
STEAM_USERNAME=
STEAM_PASSWORD=

# Systemd Integration
# Requires: systemd
# Description: Determines if KGSM should use systemd for managing instance
# lifecycles.
# Values:
#   0 - Disabled
#   1 - Enabled
# Default: 0
USE_SYSTEMD=0

# Systemd Directory
# Description: Specifies where systemd service and socket files will be created
# for instances.
# Only used if USE_SYSTEMD is enabled.
# Default: /etc/systemd/system
SYSTEMD_DIR=/etc/systemd/system

# UFW Firewall Management
# Requires: ufw
# Description: Enables or disables KGSM's management of UFW firewall rules for
# instances.
# Values:
#   0 - Disabled
#   1 - Enabled
# Default: 0
USE_UFW=0

# UFW Rules Directory
# Description: Specifies the directory where UFW firewall rules will be added.
# Only used if USE_UFW is enabled.
# Default: /etc/ufw/applications.d
UFW_RULES_DIR=/etc/ufw/applications.d

# Event Broadcasting
# Requires: socat
# Description: Enables KGSM to broadcast events (e.g., instance creation,
# start, stop) to a Unix Domain Socket.
# Values:
#   0 - Disabled
#   1 - Enabled
# Default: 0
USE_EVENTS=0

# Events Socket File
# Description: Sets the name of the Unix Domain Socket for broadcasting KGSM
# events.
# The socket is created in $KGSM_ROOT. Only used if USE_EVENTS is enabled.
# Default: kgsm.sock
EVENTS_SOCKET_FILE=kgsm.sock

# Default Instance Installation Directory
# Description: Specifies the default directory for installing game server
# instances.
# If not set, an installation directory must be provided for each instance.
# A subdirectory with the instance's name will be created within this directory.
# Default: Empty
INSTANCE_DEFAULT_INSTALL_DIR=

# Instance Name Random Character Count
# Description: Defines the number of random numeric characters to append to
# auto-generated instance names.
# Example: factorio-22, minecraft-17, valheim-38
# Values:
#   1-10
# Default: 2
INSTANCE_RANDOM_CHAR_COUNT=2

# Backup Compression
# Requires: tar
# Description: Enables automatic compression and decompression of backups to
# save disk space.
# Values:
#   0 - Disabled
#   1 - Enabled
# Default: 0
COMPRESS_BACKUPS=0

# UPnP Support
# Requires: miniupnpc
# Description: Automatically manages port forwarding (enable/disable) when
# instances start or stop,
# if UPnP is supported and enabled on the network gateway.
#
# This value can be modified individually in the <instance>.manage.sh file
# after the instance has been created.
#
# Values:
#   0 - Disabled
#   1 - Enabled
# Default: 0
USE_UPNP=0

# Default save wait timeout
# Description: How much time to wait after issuing the "save" command to a
# running instance. This time can vary a little bit between instances
# and depending on hardware performance, but the variation shouldn't be too
# drastic. Only change this if you notice your instances need more time
# to allow the save command to finish executing.
#
# This value can be modified individually in the <instance>.manage.sh file
# after the instance has been created.
#
# Values:
#   - Time, in seconds
# Default: 5
INSTANCE_SAVE_COMMAND_TIMEOUT_S=5

# Default stop wait timeout
# Description: How much time to wait after issuing the "stop" command before
# consideting an instance unresponsive. After this timeout is reached, the
# instance process will be killed.
#
# This value can be modified individually in the <instance>.manage.sh file
# after the instance has been created.
#
# Values:
#   - Time, in seconds
# Default: 30
INSTANCE_STOP_COMMAND_TIMEOUT_S=30

# Symlink instance management file
# Description: After creating an instance, create a symlink from the instance
# management file onto a directory that's available on the $PATH, allowing
# global calls to that instance without needing to locate the management file
#
# Values:
#   0 - Disabled
#   1 - Enabled
# Default: 0
USE_INSTANCE_MANAGEMENT_SYMLINK=0

# Symlink directory
# Only used if $USE_INSTANCE_MANAGEMENT_SYMLINK is enabled.
#
# Description: The directory to use when creating symlinks to the individual
# <instance>.manage.sh files.
# Allows calling the management file globally instead of having to find the
# management script file.
# The symlink will have the same name as the $INSTANCE_ID that was
# assigned during instance creation.
# Example:
#   - Instance: factorio-22
#   - Management file: $INSTANCE_DEFAULT_INSTALL_DIR/factorio-22/factorio-22.manage.sh
#   - Symlink: $INSTANCE_MANAGEMENT_SYMLINK_DIR/factorio-22
#   - Call: factorio-22 --start
#
# Values:
#  - Directory path
#
# Default: /usr/local/bin
INSTANCE_MANAGEMENT_SYMLINK_DIR=/usr/local/bin
