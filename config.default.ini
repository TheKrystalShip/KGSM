# ============================================================================
# KGSM - Krystal Game Server Manager
# Configuration File
# ============================================================================
#
# This is the main configuration file for the Krystal Game Server Manager.
# You can customize your KGSM installation by modifying the settings below.
#
# IMPORTANT NOTES:
#  - All settings can also be set as environment variables
#  - Uncommented values in this file override environment variables
#  - Use '#' for comments to maintain bash script compatibility
#  - All paths should be absolute unless otherwise specified
#
# ============================================================================


# ============================================================================
# SYSTEM CORE SETTINGS
# ============================================================================

# UPDATE CHANNEL
# Which update channel should KGSM use when checking for updates?
# The main channel offers stable releases while dev provides bleeding-edge features.
#
# Expected values:
#   main   - Stable, well-tested releases (recommended)
#   dev    - Latest features but may include experimental changes
#
# Default: main
update_channel=main

# AUTO UPDATE CHECK
# Should KGSM automatically check for updates when launched?
# When enabled, KGSM will check the selected update channel for new versions
# each time kgsm.sh is run.
#
# Dependencies: wget
#
# Expected values:
#   false  - Disable update checks
#   true   - Enable automatic update checks
#
# Default: false
auto_update_check=false

# ENABLE LOGGING
# Should KGSM write detailed logs of all operations?
# When enabled, logs will be stored in the $KGSM_ROOT/logs directory to help
# with troubleshooting and auditing server activities.
#
# Expected values:
#   false  - Disable logging
#   true   - Enable detailed logging
#
# Default: false
enable_logging=false

# LOG FILE MAX SIZE
# Maximum size allowed for log files before rotation occurs.
# Once a log file reaches this size, it will be archived and a new log file created.
#
# Expected values:
#   Any positive integer (in kilobytes)
#
# Default: 10240 (10 MB)
log_max_size_kb=10240


# ============================================================================
# STEAM INTEGRATION
# ============================================================================

# STEAM CREDENTIALS
# Login details for SteamCMD to download game servers requiring authentication.
# SECURITY WARNING: For better security, set these as environment variables
# rather than storing them in this file.
#
# Expected values:
#   Valid Steam username and password (leave empty to prompt when needed)
#
# Default: Empty (prompt when needed)
STEAM_USERNAME=
STEAM_PASSWORD=

# ============================================================================
# SERVICE MANAGEMENT
# ============================================================================

# ENABLE SYSTEMD
# Should KGSM integrate with systemd for managing game server lifecycles?
# When enabled, systemd service files will be created for each game server instance,
# allowing them to be controlled via systemctl and auto-start on boot.
#
# Dependencies: systemd
#
# Expected values:
#   false  - Don't use systemd integration
#   true   - Enable systemd integration
#
# Default: false
enable_systemd=false

# SYSTEMD FILES LOCATION
# Where should KGSM store systemd service and socket files?
# Only used when systemd integration is enabled.
#
# Expected values:
#   Valid directory path with write permissions
#
# Default: /etc/systemd/system
systemd_files_dir=/etc/systemd/system


# ============================================================================
# NETWORK SETTINGS
# ============================================================================

# ENABLE FIREWALL MANAGEMENT
# Should KGSM automatically configure firewall rules for game servers?
# When enabled, KGSM will create and manage UFW firewall rules for each
# game server instance.
#
# Dependencies: ufw
#
# Expected values:
#   false  - Don't manage firewall rules
#   true   - Automatically manage firewall rules
#
# Default: false
enable_firewall_management=false

# FIREWALL RULES LOCATION
# Where should KGSM store firewall application rules?
# Only used when firewall management is enabled.
#
# Expected values:
#   Valid directory path with write permissions
#
# Default: /etc/ufw/applications.d
firewall_rules_dir=/etc/ufw/applications.d

# ENABLE PORT FORWARDING
# Should KGSM automatically configure port forwarding on your router?
# When enabled, KGSM will use UPnP to set up port forwarding when game servers
# start and remove it when they stop.
#
# Note: This can be customized per-instance after creation
# Dependencies: miniupnpc
#
# Expected values:
#   false  - Don't configure port forwarding
#   true   - Automatically manage port forwarding
#
# Default: false
enable_port_forwarding=false


# ============================================================================
# EVENT SYSTEM
# ============================================================================

# ENABLE EVENT BROADCASTING
# Should KGSM broadcast events about game server status changes?
# When enabled, KGSM will send notifications about server starts/stops,
# backups, updates, etc. to a Unix Domain Socket that other applications
# can listen to.
#
# Dependencies: socat
#
# Expected values:
#   false  - Don't broadcast events
#   true   - Enable event broadcasting
#
# Default: false
enable_event_broadcasting=false

# EVENT SOCKET NAMES
# What filenames should be used for the Unix Domain Sockets?
# Multiple socket files can be specified as a comma-separated list.
# All sockets will be created in $KGSM_ROOT directory.
# Only used when event broadcasting is enabled.
#
# Expected values:
#   Valid filename or comma-separated list of filenames
#   Examples: kgsm.sock
#            kgsm.sock,monitoring.sock,backup.sock
#
# Default: kgsm.sock
event_socket_filenames=kgsm.sock

# ENABLE WEBHOOK EVENTS
# Should KGSM send events to webhook endpoints via HTTP POST?
# When enabled, KGSM will send JSON event data to configured webhook URLs.
# This provides HTTP-based event delivery for broader integration capabilities.
#
# Dependencies: curl
#
# Expected values:
#   false  - Don't send webhook events
#   true   - Enable webhook event delivery
#
# Default: false
enable_webhook_events=false

# WEBHOOK URLS
# Webhook endpoint URLs for receiving KGSM events.
# Multiple URLs can be specified as a comma-separated list.
# Events will be sent as HTTP POST requests with JSON payloads to all URLs.
# Only used when webhook events are enabled.
#
# Expected values:
#   Valid HTTP/HTTPS URL or comma-separated list of URLs
#   Examples: https://example.com/webhook
#            https://primary.com/webhook,https://backup.com/webhook
#
# Default: Empty (must be configured to use webhooks)
webhook_urls=

# WEBHOOK TIMEOUT
# How long should KGSM wait for webhook HTTP requests to complete?
# This prevents webhook failures from blocking KGSM operations.
#
# Expected values:
#   Positive integer (seconds)
#
# Default: 10
webhook_timeout_seconds=10

# WEBHOOK RETRY COUNT
# How many times should KGSM retry failed webhook requests?
# Failed requests will be retried with exponential backoff.
#
# Expected values:
#   Integer between 0 and 5
#
# Default: 2
webhook_retry_count=2

# WEBHOOK SECRET
# Optional secret key for webhook authentication.
# When set, KGSM will include an X-KGSM-Signature header with HMAC-SHA256
# signature of the payload for webhook endpoint verification.
#
# Expected values:
#   String (leave empty to disable signature verification)
#
# Default: Empty (no signature verification)
webhook_secret=

# ============================================================================
# WATCHER SETTINGS
# ============================================================================

# ENABLE WATCHER
# Should KGSM automatically start a watcher process for each game server instance?
# When enabled, a watcher will check the log file and the port to be open when
# an instance is started, in order to send out a ready event.
# If the watcher finds the ready message in the log file or the port is open,
# the watcher will stop and the instance will be considered ready.
#
# Dependencies: tail, grep, ss, socat
#
# Expected values:
#   false  - Don't start watcher processes
#   true   - Start watcher processes for each instance
#
# Default: false
enable_watcher=false

# WATCHER TIMEOUT
# How long should KGSM wait for a game server to become ready?
# This is the time allowed for the background watcher to find the ready
# message in the log file or the port to be open.
# This is used for both systemd and standalone instances.
# After this timeout is reached, the watcher will be stopped and the instance
# will be considered not ready.
#
# Expected values:
#   Positive integer (seconds)
#
# Default: 600 (10 minutes)
watcher_global_timeout_seconds=600

# WATCHER PORTS CHECK INTERVAL
# How often should KGSM check the ports to be open?
# This is used for both systemd and standalone instances.
#
# Expected values:
#   Positive integer (seconds)
#
# Default: 5
watcher_ports_check_interval_seconds=5

# ============================================================================
# INSTANCE CONFIGURATION
# ============================================================================

# DEFAULT INSTALLATION DIRECTORY
# Where should new game server instances be installed by default?
# A subdirectory with the instance name will be created in this location.
# If not set, an installation directory must be specified for each instance.
#
# Expected values:
#   Valid directory path with write permissions (leave empty to specify per instance)
#
# Default: Empty (specify per instance)
default_install_directory=

# INSTANCE NAME SUFFIX LENGTH
# How many random digits should be appended to auto-generated instance names?
# This creates unique identifiers for each server instance.
# Examples: minecraft-42, factorio-07, valheim-91
#
# Expected values:
#   Integer between 1 and 10
#
# Default: 2
instance_suffix_length=2

# ENABLE BACKUP COMPRESSION
# Should KGSM automatically compress backup files to save disk space?
# When enabled, backup files will be compressed during creation and
# decompressed during restoration.
#
# Dependencies: tar
#
# Expected values:
#   false  - Store backups uncompressed
#   true   - Automatically compress backups
#
# Default: false
enable_backup_compression=false

# SAVE COMMAND TIMEOUT
# How long should KGSM wait for a 'save' command to complete?
# This is the time allowed for a game server to finish saving after
# the save command is issued.
#
# Note: This can be customized per-instance after creation
#
# Expected values:
#   Positive integer (seconds)
#
# Default: 5
instance_save_command_timeout_seconds=5

# STOP COMMAND TIMEOUT
# How long should KGSM wait for a game server to shut down gracefully?
# After this timeout, if the server hasn't stopped, the process will be killed.
#
# Note: This can be customized per-instance after creation
#
# Expected values:
#   Positive integer (seconds)
#
# Default: 30
instance_stop_command_timeout_seconds=30

# AUTO UPDATE BEFORE START
# Should KGSM update the instance before starting it up?
# Before starting up an instance, it will run through the update process
# and download the latest version.
#
# Note: This can be customized per-instance after creation
#
# Expected values:
#   false   - Instances don't automatically update
#   true    - Instances will update before starting
#
# Default: false
instance_auto_update_before_start=false


# ============================================================================
# ACCESSIBILITY FEATURES
# ============================================================================

# ENABLE COMMAND SHORTCUTS
# Should KGSM create command shortcuts for easier server management?
# When enabled, symbolic links will be created in a directory on your PATH,
# allowing you to run server commands from anywhere.
#
# Expected values:
#   false  - Don't create shortcuts
#   true   - Create command shortcuts
#
# Default: false
enable_command_shortcuts=false

# SHORTCUT DIRECTORY
# Where should command shortcuts be created?
# This directory should be in your PATH environment variable.
# Only used when command shortcuts are enabled.
#
# Examples of shortcut usage:
#   Instead of typing:
#     - kgsm.sh -i minecraft-42 --start
#     - kgsm.sh -i factorio-07 --stop
#     - kgsm.sh -i valheim-91 --backup
#   You can use:
#     - minecraft-42 --start
#     - factorio-07 --stop
#     - valheim-91 --create-backup
#   This allows for quick server management without needing to specify the full kgsm.sh command.
#
# Expected values:
#   Valid directory path in your PATH
#
# Default: /usr/local/bin
command_shortcuts_directory=/usr/local/bin
