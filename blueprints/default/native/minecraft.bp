# Krystal Game Server Manager (KGSM) Blueprint
#
# Author: Cristian Moraru <cristian.moraru@live.com>
# Version: 2.0
#
# Copyright (c) 2025 The Krystal Ship
# Licensed under the GNU General Public License v3.0
# https://www.gnu.org/licenses/gpl-3.0.en.html
#
# A KGSM blueprint is a configuration file that defines how to install, configure,
# and manage a specific game server. Blueprints contain all the necessary
# information for KGSM to:
#
# - Install the game server from Steam or other sources
# - Configure the server with appropriate settings
# - Manage the server lifecycle (start, stop, restart, save)
# - Handle backups and updates
# - Configure networking and firewall rules
#
# Blueprints are stored in the blueprints/ directory and can be either:
# - Default blueprints (included with KGSM)
# - Custom blueprints (created by users)
#
# To create a new blueprint:
# 1. Copy this template file to blueprints/custom/native/your_game.bp
# 2. Fill in all required fields
# 3. Test the blueprint with: ./kgsm.sh --create your_game --install-dir /path/to/install
#
# DO NOT MODIFY THIS FILE
# Instead, copy it to the custom blueprints directory and modify it there

# Unique name, lowercase with no spaces
name=minecraft

# Port(s), used by UFW
# Wrap in single quotes (')
# Example: '1111:2222/tcp|1111:2222/udp'
ports='25565/udp'

# Steam APP_ID
# Values: 0 if not applicable, Valid Steam app id otherwise
# Default: 0
steam_app_id=0

# Only applicable if steam_app_id != 0
# Values: false for anonymous, true for account required
# Default: false
is_steam_account_required=false

# If the blueprint is not native to the platform
# If the blueprint is native to the platform, leave this empty
# Values: windows / linux / macos
# Default: linux
platform=linux

# Savefile name or world name, level, whichever is applicable
# Values: my_world / de_dust2 / my_cool_factorio_map
level_name="default"

# (Optional) If the executable happens to be in a subdirectory from the main install
# and needs to be ran from inside that subdirectory
# Values: Relative path from inside install directory
# Example: /bin/x86_64 | /DedicatedServer
executable_subdirectory=""

# Name of the executable that will start the service
# Values: start.sh / my_game.x86_64 / start_server
executable_file=java

# (Optional) Any args passed onto the executable
# Available variables that can be used (all prefixed with $instance_):
#
# Basic Instance Information:
#  $instance_name - The instance identifier
#  $instance_blueprint_file - Absolute path to the blueprint file
#  $instance_install_datetime - Timestamp when the instance was installed
#
# Directory and File Paths:
#  $instance_working_dir - Absolute path to the working directory
#  $instance_backups_dir - Absolute path to the backups directory
#  $instance_install_dir - Absolute path to the installation directory
#  $instance_saves_dir - Absolute path to the saves directory
#  $instance_temp_dir - Absolute path to the temp directory
#  $instance_logs_dir - Absolute path to the logs directory
#  $instance_launch_dir - Directory from which to launch the instance binary
#  $instance_executable_subdirectory - Subdirectory containing the executable
#  $instance_management_file - Path to the management script
#  $instance_compose_file - Path to docker-compose file (container only)
#
# Process Management Files:
#  $instance_version_file - Path to the version file
#  $instance_pid_file - Path to the PID file
#  $instance_tail_pid_file - Path to the tail PID file
#  $instance_socket_file - Path to the input socket file
#
# Runtime Configuration:
#  $instance_lifecycle_manager - How the instance is managed (standalone, systemd)
#  $instance_runtime - Runtime type (native, container)
#  $instance_platform - Target platform (linux, windows, macos)
#  $instance_auto_update - Whether to auto-update before starting
#  $instance_logs_redirect - Log redirection pattern
#
# Game Server Configuration:
#  $instance_level_name - Default level/world name
#  $instance_executable_file - The executable filename
#  $instance_executable_arguments - The command line arguments
#
# Steam Integration:
#  $instance_steam_app_id - Steam App ID for downloads
#  $instance_is_steam_account_required - Whether Steam account is required
#
# Network Configuration:
#  $instance_ports - Network ports in UFW format
#  $instance_enable_port_forwarding - Whether UPnP is enabled
#  $instance_upnp_ports - Array of ports to forward via UPnP
#  $instance_enable_firewall_management - Whether firewall management is enabled
#  $instance_firewall_rule_file - Path to firewall rule file
#
# Server Control:
#  $instance_stop_command - Command to gracefully stop the server
#  $instance_save_command - Command to save the game state
#  $instance_save_command_timeout_seconds - Timeout for save command
#  $instance_stop_command_timeout_seconds - Timeout for stop command
#
# Backup Configuration:
#  $instance_compress_backups - Whether to compress backups
#
# System Integration:
#  $instance_enable_systemd - Whether systemd integration is enabled
#  $instance_systemd_service_file - Path to systemd service file
#  $instance_systemd_socket_file - Path to systemd socket file
#
# Management Features:
#  $instance_enable_command_shortcuts - Whether command shortcuts are enabled
#  $instance_command_shortcut_file - Path to command shortcut file
executable_arguments="-Xmx4096M -Xms4096M -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 -jar release.jar nogui"

# (Optional) Stop command sent to the input socket
stop_command=/stop

# (Optional) Save command sent to the input socket
save_command=/save-all

# (Optional) Regex to match the startup success message
# This is used to determine if the instance is ready
# If not set, KGSM will wait for the instance to listen on the ports
# and then consider it ready
startup_success_regex="For help, type \"help\""
