# KGSM Instance Configuration File
# Created: ${instance_install_datetime}
# This file contains configuration for a game server instance
# Do not edit this file manually unless you know what you're doing

#=============================================================================
# BASIC INSTANCE INFORMATION
# Core identification and metadata for this game server instance
#=============================================================================

# Name of the instance, used for identification and file naming
name="${instance_name}"

# Path to the blueprint file used to create this instance
blueprint_file="${instance_blueprint_file}"

# Timestamp when the instance was installed
install_datetime="${instance_install_datetime}"

#=============================================================================
# DIRECTORY AND FILE PATHS
# All file system paths used by this instance
#=============================================================================

# Directory where the instance files are stored
working_dir="${instance_working_dir}"

# Directory where the instance backups are stored
backups_dir="${instance_backups_dir}"

# Directory where the instance install files are stored
install_dir="${instance_install_dir}"

# Directory where the instance saves are stored
saves_dir="${instance_saves_dir}"

# Directory where the instance temp files are stored
temp_dir="${instance_temp_dir}"

# Directory where the instance logs are stored
logs_dir="${instance_logs_dir}"

# (Native only) Directory from which to launch the instance binary
launch_dir="${instance_launch_dir}"

# (Native only) If there's a specific subdirectory for the executable
executable_subdirectory="${instance_install_subdir}"

# (Native only) Path to the game server executable
executable_file="${instance_executable_file}"

# Path to the management script for this instance
management_file="${instance_manage_file}"

# (Container only) Path to the docker-compose file for this instance
compose_file="${instance_compose_file}"

#=============================================================================
# PROCESS MANAGEMENT FILES
# Files used for tracking and controlling running processes
#=============================================================================

# File that stores the current version of the game server
version_file="${instance_version_file}"

# File that stores the PID of the running server process
pid_file="${instance_pid_file}"

# File that stores the PID of the tail process for log following
tail_pid_file="${instance_tail_pid_file}"

# Named pipe used for sending commands to the server
socket_file="${instance_socket_file}"

#=============================================================================
# RUNTIME CONFIGURATION
# How the instance runs and is managed by the system
#=============================================================================

# How the instance is managed (standalone, systemd)
lifecycle_manager="${instance_lifecycle_manager}"

# Specifies that this is a containerized or native (non-containerized) game server
runtime="${instance_runtime}"

# Target platform for the game server (usually linux)
platform="${instance_platform}"

# Whether to automatically update the server before starting (true | false)
auto_update="${instance_auto_update_before_start:-false}"

# Log redirection into file
logs_redirect="${instance_logs_redirect}"

#=============================================================================
# GAME SERVER EXECUTABLE CONFIGURATION
# Settings for running the actual game server binary
#=============================================================================

# Default level/world name for the game server
level_name="${instance_level_name:-default}"

# Command line arguments for the game server executable
executable_arguments="${instance_executable_arguments}"

#=============================================================================
# STEAM INTEGRATION
# Configuration for Steam/SteamCMD integration
#=============================================================================

# Steam App ID for SteamCMD downloads (0 if not applicable)
steam_app_id="${instance_steam_app_id:-0}"

# Whether a Steam account is required for downloading (true | false)
is_steam_account_required="${instance_is_steam_account_required:-false}"

#=============================================================================
# NETWORK CONFIGURATION
# Port settings, network security, and connectivity configuration
#=============================================================================

# Network ports used by the game server in UFW format
ports="${instance_ports}"

# Whether to enable UPnP port forwarding (true | false)
enable_port_forwarding="${config_instance_enable_port_forwarding:-false}"

# List of ports to forward via UPnP
upnp_ports=(${instance_upnp_ports[*]})

# Whether to enable firewall management (true | false)
enable_firewall_management="${instance_enable_firewall_management:-false}"

# Path to the firewall rule file
firewall_rule_file="${instance_firewall_rule_file}"

#=============================================================================
# SERVER CONTROL COMMANDS
# Commands used to control the game server lifecycle
#=============================================================================

# Command to gracefully stop the server
stop_command="${instance_stop_command}"

# Command to save the game state
save_command="${instance_save_command}"

# Timeout in seconds to wait after sending save command
save_command_timeout_seconds="${instance_save_command_timeout_seconds}"

# Timeout in seconds to wait after sending stop command
stop_command_timeout_seconds="${instance_stop_command_timeout_seconds}"

#=============================================================================
# BACKUP CONFIGURATION
# Settings related to backup and data preservation
#=============================================================================

# Whether to compress backups to save space
compress_backups="${instance_compress_backups}"

#=============================================================================
# SYSTEM INTEGRATION
# Integration with system services and daemons
#=============================================================================

# Whether to enable systemd integration (true | false)
enable_systemd="${instance_enable_systemd:-false}"

# Path to the systemd service file
systemd_service_file="${instance_systemd_service_file}"

# Path to the systemd socket file
systemd_socket_file="${instance_systemd_socket_file}"

#=============================================================================
# MANAGEMENT FEATURES
# Additional convenience and management features
#=============================================================================

# Whether to enable command shortcuts (symlinks) (true | false)
enable_command_shortcuts="${instance_enable_command_shortcuts:-false}"

# Path to the command shortcut file
command_shortcut_file="${instance_command_shortcut_file}"
